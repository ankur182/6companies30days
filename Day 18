I.)Constrained subsequence sum
code:
int constrainedSubsetSum(vector<int>& nums, int k) {
        // dp[i] is the max subset sum which ENDING AT i
        vector<int> dp(nums.size());
        // window contains dp[i - k:i] and a additional 0.
        multiset<int> window = {0};
        
        for(int i = 0; i < nums.size(); i++) {
            // dp[i] = nums[i] + max(0, dp[i - k: i])
            dp[i] = nums[i] + *window.rbegin();
            // update window.
            window.insert(dp[i]);
            if(i >= k) window.erase(window.find(dp[i - k]));
        }
        
        // return max(dp)
        return *max_element(dp.begin(), dp.end());
    }

II.)last moment before all ants fall out of plank
Code:
int getLastMoment(int n, vector<int>& left, vector<int>& right) {
        int ans=0;
        for(auto it:left) 
            ans=max(ans,(abs(0-it)));  
        for(auto it:right)
            ans=max(ans,abs(n-it));        
        return ans;        
    }

III.)airplane seat assignmnet probability:
CODE:
double nthPersonGetsNthSeat(int n) {
        if(n==1)return 1.00000;
        else return 0.50000;
    }
